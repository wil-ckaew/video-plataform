#docker-compose.yml
version: '3.8'

services:
  db:
    image: postgres:14
    container_name: db
    environment:
      POSTGRES_USER: retesp
      POSTGRES_PASSWORD: senha123
      POSTGRES_DB: linhas4_db
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U retesp"]
      interval: 5s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: retesp@admin.com
      PGADMIN_DEFAULT_PASSWORD: senha123
    ports:
      - "5050:80"
    depends_on:
      - db

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest

  migrator:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: migrator
    depends_on:
      - db
    environment:
      DATABASE_URL: postgres://retesp:senha123@db:5432/linhas4_db
    entrypoint: /bin/bash
    command: -c "cargo install sqlx-cli --no-default-features --features postgres && sqlx migrate run"

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend
    ports:
      - "8080:8080"
    depends_on:
      - db
      - rabbitmq
      - migrator
    environment:
      DATABASE_URL: postgres://retesp:senha123@db:5432/linhas4_db
      AMQP_URL: amqp://guest:guest@rabbitmq:5672/%2f
      RUST_LOG: info

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    ports:
      - "3000:3000"
    depends_on:
      - backend

volumes:
  pgdata: