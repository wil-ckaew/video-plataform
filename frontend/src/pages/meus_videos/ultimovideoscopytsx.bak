import React, { useState, useEffect } from 'react';
import axios from 'axios';
import dynamic from 'next/dynamic';
import Header from '../../components/Header';
import Link from 'next/link';

// Importa ReactPlayer dinamicamente com SSR desativado
const ReactPlayer = dynamic(() => import('react-player'), { ssr: false });

const VideosPage: React.FC = () => {
  const apiUrl = process.env.NEXT_PUBLIC_API_URL || 'http://localhost:8080';
  const [videos, setVideos] = useState<any[]>([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState<string | null>(null);
  const [selectedVideo, setSelectedVideo] = useState<any>(null);

  useEffect(() => {
    const fetchVideos = async () => {
      try {
        const response = await axios.get(`${apiUrl}/api/videos`);
        setVideos(response.data.videos || []);
        setSelectedVideo(response.data.videos[0] || null); // Define o primeiro vídeo como o selecionado por padrão
        setError(null);
      } catch (error) {
        const errorMessage = error instanceof Error ? error.message : 'Unknown error occurred';
        setError(`Error fetching videos: ${errorMessage}`);
      } finally {
        setLoading(false);
      }
    };

    fetchVideos();
  }, [apiUrl]);

  const handleVideoSelect = (video: any) => {
    setSelectedVideo(video);
  };

  return (
    <div className="flex flex-col h-screen">
      <Header />
      <main className="flex-1 overflow-y-auto bg-gray-100 p-4">
        <h1 className="text-2xl font-bold mb-4">Videos</h1>
        {loading ? (
          <p className="text-center text-gray-600">Loading...</p>
        ) : error ? (
          <p className="text-center text-red-600">{error}</p>
        ) : (
          <div>
            {/* Botões no Topo */}
            <div className="mb-4 flex justify-end space-x-4">
              <Link href="/videos/add-video" className="bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600">
                Add Video
              </Link>
            </div>

            {/* Exibindo o Vídeo Selecionado com Player */}
            {selectedVideo && (
              <div className="mb-4">
                <div className="video-container">
                  <ReactPlayer
                    url={`/videos/${selectedVideo.filename}`} // Certifique-se de que o caminho está correto
                    controls
                    width="100%"
                    height="auto"
                    style={{ maxWidth: '100%' }}
                  />
                  {selectedVideo.description && <p>{selectedVideo.description}</p>}
                </div>
              </div>
            )}

            {/* Exibindo os Outros Vídeos em Miniatura com Botão de Edição */}
            <div className="grid grid-cols-2 gap-4 md:grid-cols-3 lg:grid-cols-4">
              {videos.length > 0 ? (
                videos.map((video: any) => (
                  <div key={video.id} className="flex flex-col items-center space-y-2">
                    <div
                      className="w-full h-32 overflow-hidden bg-gray-300 cursor-pointer"
                      onClick={() => handleVideoSelect(video)}
                    >
                      <div className="video-container">
                        <ReactPlayer
                          url={`/videos/${video.filename}`} // Certifique-se de que o caminho está correto
                          controls
                          width="100%"
                          height="100%"
                          style={{ maxWidth: '100%' }}
                        />
                      </div>
                    </div>
                    <div className="flex-1 text-center">
                      <p className="text-sm">{video.description}</p>
                      <Link
                        href={`/videos/edit-video?id=${video.id}`} // Corrigido para passar o ID como query string
                        className="bg-green-500 text-white px-4 py-2 rounded hover:bg-green-600 mt-2 block"
                      >
                        Edit Video
                      </Link>
                    </div>
                  </div>
                ))
              ) : (
                <p className="text-center text-gray-600 col-span-full">No more videos available</p>
              )}
            </div>
          </div>
        )}
      </main>
    </div>
  );
};

export default VideosPage;
